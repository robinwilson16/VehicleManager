@page "/Vehicles"
@page "/Vehicles/{VehicleID}"

@using VehicleManager.Models
@using VehicleManager.Services
@using VehicleManager.Shared
@using System.Net
@using Microsoft.AspNetCore.Components.QuickGrid
@using TinyMCE.Blazor

@inject HttpClient Http
@inject IConfiguration configuration
@inject NavigationManager NavManager
@inject AppData appData

<PageTitle>Vehicles @@ Broken Motor</PageTitle>

<audio src="@soundEffect" autoplay></audio>

<Modal @ref="modalInfo">
    <WindowControls>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => modalInfo!.Close()"></button>
    </WindowControls>
    <Title><i class="fa-solid fa-circle-info"></i> @msgInfoTitle</Title>
    <Body>
        <p>
            @msgInfo
        </p>
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => modalInfo!.Close()">Close</button>
    </Footer>
</Modal>

<Modal @ref="modalError">
    <WindowControls>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => modalError!.Close()"></button>
    </WindowControls>
    <Title><i class="fa-solid fa-triangle-exclamation"></i> @msgErrorTitle</Title>
    <Body>
        <div class="alert alert-danger" role="alert">
            @msgError
        </div>
        @if (msgErrorStackTrace != null)
        {
            <p><i class="fa-solid fa-bug"></i> Stack Trace:</p>
            <pre class="pre-scrollable ErrorDetails">@msgErrorStackTrace</pre>
        }
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => modalError!.Close()">Close</button>
    </Footer>
</Modal>

<Modal @ref="modalConfirm">
    <WindowControls>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => modalConfirm!.Close()"></button>
    </WindowControls>
    <Title><i class="fa-solid fa-circle-question"></i> @msgConfirmTitle</Title>
    <Body>
        <p>
            @msgConfirm
        </p>
    </Body>
    <Footer>
        <button type="button" class="btn btn-danger"><i class="fa-solid fa-trash"></i> Yes</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => modalConfirm!.Close()"><i class="fa-solid fa-right-from-bracket"></i> Cancel</button>
    </Footer>
</Modal>

<h3><i class="fa-solid fa-car-burst"></i> Vehicles</h3>

@if (loadDataErrorMsg != null) 
{
    <div class="container">
        <div class="row">
            <div class="col-md">
                <div class="alert alert-danger hstack gap-3" role="alert">
                    <div>
                        <h1><i class="fa-solid fa-triangle-exclamation"></i></h1>
                    </div>
                    <div>
                        <p>
                            @loadDataErrorMsg
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else if (mainRecords == null)
{
    <div class="container">
        <div class="row">
            <div class="col-md">
                <div class="alert alert-primary text-center" role="alert">
                    <h1>
                        <i class="fa-solid fa-spinner fa-spin"></i> Loading ...
                    </h1>
                </div>
            </div>
        </div>
    </div>
}
else {
    <div class="container-fluid">
        <div class="row">
            <div class="col-md TableArea pt-3 rounded">
                <div class="alert alert-primary" role="alert">
                    @if (FiltersMain.Count > 0)
                    {
                        <button type="button" class="btn btn-primary btn-sm me-3" @onclick="@FilterMainClear">Filters (Clear) <i class="fa-solid fa-filter-circle-xmark"></i></button>

                        int filterNumber = 0;
                        @foreach (var filter in FiltersMain)
                        {
                            filterNumber += 1;

                            @if (filterNumber > 1) {
                                <span class="ps-3 pe-3">|</span>
                            }
                            <span>@filter</span>
                        }
                    }
                </div>
                <div class="TableContainer">
                    <div class="table-responsive">
                        <QuickGrid Items="@FilteredMainRecords" Virtualize="true" Class="table table-striped table-hover table-bordered" TGridItem="VehicleModel">

                            <TemplateColumn Title="" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.SubmissionID)">
                                <button type="button" class="btn btn-primary btn-sm" @onclick="()=>EditMainRecord(context.SubmissionID)"><i class="fa-solid fa-up-right-from-square"></i></button>
                            </TemplateColumn>

                            <TemplateColumn Title="ID" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.SubmissionID)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.SubmissionID</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="number" class="form-control" autofocus @bind="FilterMainSubmissionID" @bind:event="oninput" @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Date" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.submissionDate)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@(context?.submissionDate == null ? "" : context?.submissionDate.Value.ToString("dd/MM/yyyy"))</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="date" class="form-control" autofocus @bind="FilterMainSubmissionDate" @bind:event="oninput" @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Surname" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.Surname)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.Surname</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainSurname" @bind:event="oninput" placeholder="Surname..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Forename" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.Forename)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.Forename</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainForename" @bind:event="oninput" placeholder="Forename..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Email Address" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.Email)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.Email</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainEmail" @bind:event="oninput" placeholder="Email..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Telephone Number" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.Tel)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.Tel</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainTel" @bind:event="oninput" placeholder="Email..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Post Code" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.PostCode)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.PostCode</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainPostCode" @bind:event="oninput" placeholder="Email..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Reg Number" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.RegistrationNumber)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.RegistrationNumber</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainRegistration" @bind:event="oninput" placeholder="Registration Number..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Make" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.Make)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.Make</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainMake" @bind:event="oninput" placeholder="Make..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                            <TemplateColumn Title="Model" Sortable="true" SortBy="GridSort<VehicleModel>.ByAscending(x => x.Model)">
                                <ChildContent>
                                    <div @onclick="()=>SelectMainRecord(context?.SubmissionID)" class="@TableCSS(context)">
                                        <div class="col-justify-start">@context.Model</div>
                                    </div>
                                </ChildContent>
                                <ColumnOptions>
                                    <div class="search-box">
                                        <input type="search" class="form-control" autofocus @bind="FilterMainModel" @bind:event="oninput" placeholder="Model..." @onkeyup="FilterMainRefresh" @onchange="FilterMainRefresh" />
                                    </div>
                                </ColumnOptions>
                            </TemplateColumn>

                        </QuickGrid>
                    </div>
                </div>
                <div class="alert alert-secondary" role="alert">
                    <div class="row">
                        <div class="col-md">
                            <div class="d-grid gap-2 d-md-block text-start">

                                @if (selectedRecord?.SubmissionID > 0)
                                {
                                    <span>1 Record Selected</span>
                                }
                            </div>
                        </div>
                        <div class="col-md text-end">

                            @if (FiltersMain.Count > 0)
                            {
                                <div class="col-md text-end fw-bold text-primary">
                                    @FilteredMainRecords?.Count() Records (Filtered)
                                </div>
                            }
                            else
                            {
                                <div class="col-md text-end">
                                    @FilteredMainRecords?.Count() Records
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <Modal @ref="modalVehicle">
        <WindowControls>
            @if (selectedRecordChanges?.Count > 0)
            {
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CancelMainRecordConfirm"></button>
            }
            else
            {
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => modalVehicle!.Close()"></button>
            }
        </WindowControls>
        <Title><i class="fa-solid fa-car"></i> Vehicle @selectedRecord?.SubmissionID</Title>
        <Body>
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="customer-tab" data-bs-toggle="tab" data-bs-target="#customer-tab-pane" type="button" role="tab" aria-controls="customer-tab-pane" aria-selected="true"><i class="fa-solid fa-user"></i> Customer</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="vehicle-tab" data-bs-toggle="tab" data-bs-target="#vehicle-tab-pane" type="button" role="tab" aria-controls="vehicle-tab-pane" aria-selected="false"><i class="fa-solid fa-car"></i> Vehicle</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="messages-tab" data-bs-toggle="tab" data-bs-target="#messages-tab-pane" type="button" role="tab" aria-controls="messages-tab-pane" aria-selected="false"><i class="fa-solid fa-envelope"></i> Messages</button>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="customer-tab-pane" role="tabpanel" aria-labelledby="customer-tab" tabindex="0">
                    <div class="bd-callout bd-callout-VM bd-callout-grey GreyBackground">
                        <div class="container">
                            <div class="row mb-3 align-items-center">
                                <div class="col-md text-center">
                                    <h4><i class="fa-solid fa-user"></i> Customer Details</h4>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Forename
                                        </div>
                                        <div class="col-md-8 Text">
                                            <strong>@selectedRecord?.Forename</strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Surname
                                        </div>
                                        <div class="col-md-8 Text">
                                            <strong>@selectedRecord?.Surname</strong>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Email
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Email
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Telephone
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Tel
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Registration Number
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.RegistrationNumber
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Post Code
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.PostCode
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md mb-1">
                                    Message
                                </div>
                            </div>
                            <div class="row align-items-center">
                                <div class="col-md">
                                    <div class="Textarea">
                                        @selectedRecord?.Message
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bd-callout bd-callout-warning bd-callout-grey GreyBackground">
                        <div class="container">
                            <div class="row mb-3 align-items-center">
                                <div class="col-md text-center">
                                    <h4><i class="fa-solid fa-scale-balanced"></i> Offer Details</h4>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Has Accepted Offer
                                        </div>
                                        <div class="col-md-8 Text TextYes">
                                            <strong>Yes</strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Last Offer Amount
                                        </div>
                                        <div class="col-md-8 Text">
                                            <strong>&pound; 500.00</strong>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Last Contacted
                                        </div>
                                        <div class="col-md-8 Text">
                                            13/12/2024
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Messages Sent
                                        </div>
                                        <div class="col-md-8 Text">
                                            3
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="vehicle-tab-pane" role="tabpanel" aria-labelledby="vehicle-tab" tabindex="0">
                    <div class="bd-callout bd-callout-purple bd-callout-grey GreyBackground">
                        <div class="container">
                            <div class="row mb-3 align-items-center">
                                <div class="col-md text-center">
                                    <h4><i class="fa-solid fa-car"></i> Vehicle Details</h4>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Registration Number
                                        </div>
                                        <div class="col-md-8 Text">
                                            <strong>@selectedRecord?.RegistrationNumber</strong>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Year of Manufacture
                                        </div>
                                        <div class="col-md-8 Text">
                                            <strong>@selectedRecord?.YearOfManufacture</strong>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Make
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Make
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Model
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Model
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Description
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Description
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Derivative
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Derivative
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Colour
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Colour
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Body Style
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.BodyStyle
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Fuel Type
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.FuelType
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Transmission Type
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.TransmissionType
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Engine Size CC
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.EngineSizeCC
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Category
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.Category
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Door Count
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.DoorCount
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Gear Count
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.GearCount
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Drive Axle
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.DriveAxle
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            EngineCode
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.EngineCode
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Engine Cylinder Count
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.EngineCylinderCount
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Engine Size Litre
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.EngineSizeLitre
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-4">
                                            Wheelbase MM
                                        </div>
                                        <div class="col-md-8 Text">
                                            @selectedRecord?.WheelbaseMM
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="messages-tab-pane" role="tabpanel" aria-labelledby="messages-tab" tabindex="0">
                    <div class="row">
                        <div class="col-md">
                            <div class="alert alert-primary" role="alert">
                                @if (FiltersMsg.Count > 0)
                                {
                                    <button type="button" class="btn btn-primary btn-sm me-3" @onclick="@FilterMsgClear">Filters (Clear) <i class="fa-solid fa-filter-circle-xmark"></i></button>

                                    int filterNumber = 0;
                                    @foreach (var filter in FiltersMsg)
                                    {
                                        filterNumber += 1;

                                        @if (filterNumber > 1)
                                        {
                                            <span class="ps-3 pe-3">|</span>
                                        }
                                        <span>@filter</span>
                                    }
                                }
                            </div>
                            <div class="TableContainer">
                                <div class="table-responsive-dialog">
                                    <QuickGrid Items="@FilteredMessages" Virtualize="true" Class="table table-striped table-hover table-bordered">
                                        <TemplateColumn Title="">
                                            <button type="button" class="btn btn-primary btn-sm"><i class="fa-solid fa-up-right-from-square"></i></button>
                                        </TemplateColumn>
                                        <PropertyColumn Title="ID" Property="@(p => p.MessageID)" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="number" class="form-control" autofocus @bind="FilterMsgMessageID" @bind:event="oninput" @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                        <PropertyColumn Title="Date" Property="@(p => p.SentDate)" Format="dd/MM/yyyy" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="date" class="form-control" autofocus @bind="FilterMsgSentDate" @bind:event="oninput" @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                        <PropertyColumn Property="@(p => p.Message)" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="search" class="form-control" autofocus @bind="FilterMsgMessage" @bind:event="oninput" placeholder="Message..." @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                        <PropertyColumn Property="@(p => p.MessageTypeID)" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="search" class="form-control" autofocus @bind="FilterMsgType" @bind:event="oninput" placeholder="Message..." @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                        <PropertyColumn Property="@(p => p.AmountOffered)" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="search" class="form-control" autofocus @bind="FilterMsgAmount" @bind:event="oninput" placeholder="Amount..." @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                        <PropertyColumn Property="@(p => p.IsAccepted)" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="search" class="form-control" autofocus @bind="FilterMsgIsAccepted" @bind:event="oninput" placeholder="Accepted..." @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                        <PropertyColumn Property="@(p => p.MessageStatusID)" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="search" class="form-control" autofocus @bind="FilterMsgStatus" @bind:event="oninput" placeholder="Status..." @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                        <PropertyColumn Title="Sent By" Property="@(p => p.From)" Sortable="true">
                                            <ColumnOptions>
                                                <div class="search-box">
                                                    <input type="search" class="form-control" autofocus @bind="FilterMsgFrom" @bind:event="oninput" placeholder="Sent By..." @onkeyup="FilterMsgRefresh" @onchange="FilterMsgRefresh" />
                                                </div>
                                            </ColumnOptions>
                                        </PropertyColumn>
                                    </QuickGrid>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md text-end">
                            <button type="button" class="btn btn-primary mb-3" @onclick="CreateMessage"><i class="fa-solid fa-envelope-open-text"></i> Send a New Message</button>
                        </div>
                    </div>
                </div>
            </div>
        </Body>
        <Footer>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => AdvanceToMainRecord(-1)"><i class="fa-solid fa-square-caret-left"></i></button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => AdvanceToMainRecord(1)"><i class="fa-solid fa-square-caret-right"></i></button>

            @if (selectedRecordChanges?.Count > 0)
            {
                <button type="button" class="btn btn-success" data-bs-dismiss="modal" @onclick="() => SaveMainRecord(true)"><i class="fa-solid fa-floppy-disk"></i> Save and Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => SaveMainRecord(false)"><i class="fa-solid fa-floppy-disk"></i> Save</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="CancelMainRecordConfirm"><i class="fa-solid fa-rotate-left"></i> Cancel <strong>@(selectedRecordChanges?.Count ?? 1)</strong> Changes</button>
            }
            else
            {
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="CloseMainRecord"><i class="fa-solid fa-rotate-left"></i> Close</button>
            }
        </Footer>
    </Modal>

    <Modal @ref="modalMessage">
        <WindowControls>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => modalMessage!.Close()"></button>
        </WindowControls>
        <Title><i class="fa-solid fa-envelope-open-text"></i> New Message to @selectedRecord?.Forename @selectedRecord?.Surname about @selectedRecord?.Colour @selectedRecord?.Make (@selectedRecord?.RegistrationNumber)</Title>
        <Body>
            <div class="bd-callout bd-callout-primary bd-callout-grey GreyBackground">
                <div class="container">
                    <div class="row">
                        <div class="col-md">
                            <div class="row mb-3 align-items-center">
                                <div class="col-md text-center">
                                    <h4><i class="fa-solid fa-envelope-open-text"></i> New Message to @selectedRecord?.Forename @selectedRecord?.Surname</h4>
                                </div>
                            </div>

                            <div class="row g-3 mb-3">
                                <div class="col-md-4">
                                    <label class="col-form-label"><i class="fa-solid fa-angles-right"></i> Message Template</label>
                                </div>
                                <div class="col-md-8">
                                    <select class="form-select">
                                        <option value="">-- Choose Template --</option>
                                        <option value="InitialOffer">Email Client (initial offer email)</option>
                                        <option value="FollowUp">Attempted to Contact (follow up email)</option>
                                        <option value="AdditionalInfo">Additional Info (if they need more info)</option>
                                        <option value="FinalOffer">Final Offer (If they need to send a counter offer)</option>
                                        <option value="GoogleReview">Google Review (including offer for a prize draw)</option>
                                    </select>
                                </div>
                            </div>

                            <div class="row g-3">
                                <div class="col-md">
                                    <label class="col-form-label"><i class="fa-solid fa-note-sticky"></i> Message:</label>
                                </div>
                            </div>
                            <div class="row g-3 mb-3">
                                <div class="col-md">
                                    <Editor
                                    ScriptSrc="./lib/tinymce/tinymce.min.js"
                                    />
                                    @* <textarea class="form-control"></textarea> *@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </Body>
        <Footer>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="() => modalMessage!.Close()">Close</button>
        </Footer>
    </Modal>
}

@code {
    public EditContext? EditContextMain { get; set; }
    private FluentValidationValidator? _fluentValidationValidator;

    public string? action { get; set; }
    public string? soundEffect { get; set; }

    private Modal? modalInfo { get; set; }
    public string? msgInfoTitle = null;
    public MarkupString? msgInfo = null;

    private Modal? modalError { get; set; }
    public string? msgErrorTitle = null;
    public MarkupString? msgError = null;
    public string? msgErrorStackTrace = null;

    private Modal? modalConfirm { get; set; }
    public string? msgConfirmTitle = null;
    public MarkupString? msgConfirm = null;

    public string? loadDataErrorMsg = null;

    [Parameter]
    public int? VehicleID { get; set; }

    private List<VehicleModel>? mainRecords { get; set; }

    [SupplyParameterFromForm]
    public VehicleModel? selectedRecord { get; set; } = new VehicleModel();
    private VehicleModel? selectedRecordCopy { get; set; } = new VehicleModel();
    private IDictionary<string, string>? selectedRecordChanges = new Dictionary<string, string>();

    //Related datasets
    private List<MessageModel>? selectedRecordMessages;

    private IQueryable<VehicleModel>? FilteredMainRecords =>
        (mainRecords)?.AsQueryable()
        .Where(
            v => 
            (FilterMainSubmissionID == null ? true : v.SubmissionID == (FilterMainSubmissionID ?? v.SubmissionID))
            && (FilterMainSubmissionDate == null ? true : DateOnly.FromDateTime(v.submissionDate ?? DateTime.MinValue) == DateOnly.FromDateTime((DateTime)(FilterMainSubmissionDate ?? v.submissionDate)!))
            && (FilterMainSurname == null ? true : (v.Surname ?? string.Empty).Contains(FilterMainSurname, StringComparison.CurrentCultureIgnoreCase))
            && (FilterMainForename == null ? true : (v.Forename ?? string.Empty).Contains(FilterMainForename, StringComparison.CurrentCultureIgnoreCase))
            && (FilterMainEmail == null ? true : (v.Email ?? string.Empty).Contains(FilterMainEmail, StringComparison.CurrentCultureIgnoreCase))
            && (FilterMainTel == null ? true : (v.Tel ?? string.Empty).Contains(FilterMainTel, StringComparison.CurrentCultureIgnoreCase))
            && (FilterMainPostCode == null ? true : (v.PostCode ?? string.Empty).Contains(FilterMainPostCode, StringComparison.CurrentCultureIgnoreCase))
            && (FilterMainRegistration == null ? true : (v.RegistrationNumber ?? string.Empty).Contains(FilterMainRegistration, StringComparison.CurrentCultureIgnoreCase))
            && (FilterMainMake == null ? true : (v.Make ?? string.Empty).Contains(FilterMainMake, StringComparison.CurrentCultureIgnoreCase))
            && (FilterMainModel == null ? true : (v.Model ?? string.Empty).Contains(FilterMainModel, StringComparison.CurrentCultureIgnoreCase))
        );

    List<string> FiltersMain = new List<string>();
    int? FilterMainSubmissionID;
    DateTime? FilterMainSubmissionDate;
    string? FilterMainSurname;
    string? FilterMainForename;
    string? FilterMainEmail;
    string? FilterMainTel;
    string? FilterMainPostCode;
    string? FilterMainRegistration;
    string? FilterMainMake;
    string? FilterMainModel;

    List<string> FiltersMsg = new List<string>();
    int? FilterMsgMessageID;
    string? FilterMsgMessage;
    MessageType? FilterMsgType;
    decimal? FilterMsgAmount;
    bool? FilterMsgIsAccepted;
    MessageStatus? FilterMsgStatus;
    string? FilterMsgFrom;
    DateTime? FilterMsgSentDate;

    private IQueryable<MessageModel>? FilteredMessages =>
        (selectedRecordMessages)?.AsQueryable()
        .Where(
            m =>
            m.MessageID == (FilterMsgMessageID ?? m.MessageID)
            && DateOnly.FromDateTime(m.SentDate ?? DateTime.Now)! == DateOnly.FromDateTime((DateTime)(FilterMsgSentDate ?? m.SentDate)!)
            && m.Message.ToString()!.Contains(FilterMsgMessage ?? string.Empty, StringComparison.CurrentCultureIgnoreCase)
            && m.MessageTypeID! == (FilterMsgType ?? m.MessageTypeID)
            && m.IsAccepted! == (FilterMsgIsAccepted ?? m.IsAccepted)
            && m.MessageStatusID! == (FilterMsgStatus ?? m.MessageStatusID)
            && m.From!.Contains(FilterMsgFrom ?? string.Empty, StringComparison.CurrentCultureIgnoreCase)
        );

    private string? vehicleEndPoint;

    private Modal? modalVehicle { get; set; }
    private Modal? modalMessage { get; set; }

    protected override async Task OnInitializedAsync() 
    {
        SetEditorContextMain();

        bool? isError = false;
        vehicleEndPoint = $"{configuration["VehicleEndpoint"]}/FormEntries";

        try
        {
            Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", appData.CurrentUser?.Token);
            mainRecords = await Http.GetFromJsonAsync<List<VehicleModel>>(vehicleEndPoint);
        }
        catch (HttpRequestException ex)
        {
            HandleJsonException(ex, "Vehicle", VehicleID.ToString() ?? "");
        }

        if (isError != true)
        {
            //Load other objects
        }
    }

    public void SetEditorContextMain()
    {
        //When Edit Form is based on an Edit Context this must be called each time the context changes for validation to work
        if (selectedRecordCopy != null)
            EditContextMain = new EditContext(selectedRecordCopy);

        if (EditContextMain != null)
        {
            EditContextMain.OnFieldChanged += ChangeMainRecord;
        }
    }

    public string TableCSS(VehicleModel? context)
    {
        string css = "";
        if (context?.SubmissionID == selectedRecord?.SubmissionID)
        {
            css = "SelectedRow";
        }

        return css;
    }

    private void FilterMainRefresh()
    {
        FiltersMain.Clear();

        if (FilterMainSubmissionID != null)
        {
            FiltersMain.Add($"ID: '{FilterMainSubmissionID.ToString()}'");
        }
        if (FilterMainSubmissionDate != null)
        {
            FiltersMain.Add($"Date: '{FilterMainSubmissionDate.Value.ToString("dd/MM/yyyy")}'");
        }
        if (FilterMainSurname != null)
        {
            FiltersMain.Add($"Surname: '{FilterMainSurname}'");
        }
        if (FilterMainForename != null)
        {
            FiltersMain.Add($"Forename: '{FilterMainForename}'");
        }
        if (FilterMainEmail != null)
        {
            FiltersMain.Add($"Email: '{FilterMainEmail}'");
        }
        if (FilterMainTel != null)
        {
            FiltersMain.Add($"Tel: '{FilterMainTel}'");
        }
        if (FilterMainPostCode != null)
        {
            FiltersMain.Add($"Post Code: '{FilterMainPostCode}'");
        }
        if (FilterMainRegistration != null)
        {
            FiltersMain.Add($"Reg No: '{FilterMainRegistration}'");
        }
        if (FilterMainMake != null)
        {
            FiltersMain.Add($"Make: '{FilterMainMake}'");
        }
        if (FilterMainModel != null)
        {
            FiltersMain.Add($"Model: '{FilterMainModel}'");
        }
    }

    private void FilterMainClear()
    {
        FilterMainSubmissionID = null;
        FilterMainSubmissionDate = null;
        FilterMainSurname = null;
        FilterMainForename = null;
        FilterMainEmail = null;
        FilterMainTel = null;
        FilterMainPostCode = null;
        FilterMainRegistration = null;
        FilterMainMake = null;
        FilterMainModel = null;

        FiltersMain.Clear();
    }

    private void FilterMsgRefresh()
    {
        FiltersMsg.Clear();

        if (FilterMsgMessageID != null)
        {
            FiltersMsg.Add($"ID: '{FilterMsgMessageID.ToString()}'");
        }
        if (FilterMsgSentDate != null)
        {
            FiltersMsg.Add($"Date: '{((DateTime)FilterMsgSentDate).ToString("dd/MM/yyyy")}'");
        }
        if (FilterMsgMessage?.Length > 0)
        {
            FiltersMsg.Add($"Message: '{FilterMsgMessage}'");
        }
        if (FilterMsgType != null)
        {
            FiltersMsg.Add($"Type: '{FilterMsgType}'");
        }
        if (FilterMsgAmount != null)
        {
            FiltersMsg.Add($"Amount: '{FilterMsgAmount.ToString()}'");
        }
        if (FilterMsgIsAccepted != null)
        {
            FiltersMsg.Add($"Accepted: '{((bool)(FilterMsgIsAccepted = true) ? "Y" : "N")}'");
        }
        if (FilterMsgStatus != null)
        {
            FiltersMsg.Add($"Status: '{FilterMsgStatus}'");
        }
        if (FilterMsgFrom != null)
        {
            FiltersMsg.Add($"Sent By: '{FilterMsgFrom}'");
        }
    }

    private void FilterMsgClear()
    {
        FilterMsgMessageID = null;
        FilterMsgMessage = null;
        FilterMsgType = null;
        FilterMsgAmount = null;
        FilterMsgIsAccepted = null;
        FilterMsgStatus = null;
        FilterMsgFrom = null;
        FilterMsgSentDate = null;

        FiltersMsg.Clear();
    }

    private async Task FormAction()
    {
        //Determine what clear form button should do on dialog box

        if (action == "ClearFormConfirm")
        {
            ClearForm();
        }
        else if (action == "CancelMainRecordConfirm")
        {
            CancelMainRecord();
        }
        else if (action == "DeleteMainRecordConfirm")
        {
            await DeleteMainRecord();
        }
        else
        {
            action = "Error";
            soundEffect = SoundFunctions.GetErrorSound();

            msgErrorTitle = $"Invalid Action";
            msgError = (MarkupString)$"An invalid option was specified. Please try again.";
            msgErrorStackTrace = null;

            modalError!.Open();
        }
    }

    private void ClearFormConfirm()
    {
        action = "ClearFormConfirm";
        soundEffect = SoundFunctions.GetPromptSound();

        msgConfirmTitle = $"Clear Form?";
        msgConfirm = (MarkupString)$"Are you sure you want to clear all information on this form?";

        modalConfirm!.Open();
    }

    private void ClearForm()
    {
        action = "ClearForm";

        selectedRecord = new VehicleModel();

        modalConfirm!.Close();
    }

    private VehicleModel? GetMainRecord(int recordID)
    {
        return mainRecords?.Where(v => v.SubmissionID == recordID).FirstOrDefault();
    }

    private void SelectMainRecord(int? recordID)
    {
        if (recordID != null && recordID > 0)
        {
            selectedRecord = GetMainRecord(recordID ?? 0);
        }
        else
        {
            selectedRecord = new VehicleModel();
        }

        //Keep a copy of this object to be used for edit form so original object can remain untouched until save operation (otherwise it changes on screen)
        if (selectedRecord != null)
            selectedRecordCopy = selectedRecord?.Clone();
    }

    public void AdvanceToMainRecord(int numRecords)
    {
        int? currentRecordID = selectedRecord?.SubmissionID;
        VehicleModel? nextRecord = new VehicleModel();

        if (numRecords > 0)
        {
            nextRecord =
            FilteredMainRecords?
            .SkipWhile(obj => obj.SubmissionID != currentRecordID)
            .Skip(numRecords)
            .FirstOrDefault();
        }
        else if (numRecords < 0)
        {
            int numRecordsBack = Math.Abs(numRecords);
            nextRecord =
                FilteredMainRecords?
                .Reverse()
                .SkipWhile(obj => obj.SubmissionID != currentRecordID)
                .Skip(numRecordsBack)
                .FirstOrDefault();
        }

        if (nextRecord != null)
        {
            if (nextRecord?.SubmissionID != null)
            {
                selectedRecord = nextRecord;
                selectedRecordCopy = nextRecord;
            }
        }
    }

    protected void ChangeMainRecord(object? sender, FieldChangedEventArgs? e)
    {
        string? fieldName = e?.FieldIdentifier.FieldName;
        string? fieldValue = e?.FieldIdentifier.Model.GetType().GetProperty(fieldName ?? "")?.GetValue(e?.FieldIdentifier.Model)?.ToString();

        fieldValue = StringFunctions.FormatFieldChangedValue(fieldValue);

        if (selectedRecordChanges != null && fieldName != null)
        {
            if (selectedRecordChanges.ContainsKey(fieldName))
            {
                selectedRecordChanges[fieldName] = fieldValue ?? "";
            }
            else
            {
                selectedRecordChanges.Add(fieldName, fieldValue ?? "");
            }
        }
    }

    private void EditMainRecord(int submissionID)
    {
        selectedRecord = GetMainRecord(submissionID);
        selectedRecordMessages = GetMessages(submissionID);

        SetEditorContextMain();

        if (selectedRecordCopy != null) {
            modalVehicle!.MakeLarge();
            modalVehicle!.Open();
        }
        else {
            action = "Error";
            soundEffect = SoundFunctions.GetErrorSound();

            msgErrorTitle = $"Cannot Load Vehicle {submissionID}";
            msgError = (MarkupString)$"Unfortunately the vehicle could not be loaded due to an error.<br />Please try again.";
            msgErrorStackTrace = null;

            modalError!.Open();
        }
    }

    private async Task<bool> SaveMainRecord(bool? closeAfterSave)
    {
        bool returnValue = false;

        if (selectedRecordCopy != null)
        {
            //Copy properties back to tracked object being saved
            selectedRecordCopy.CopyProperties(selectedRecord);

            selectedRecordChanges?.Clear();

            soundEffect = SoundFunctions.GetConfirmSound();
            returnValue = true;
        }

        return returnValue;
    }

    private void DeleteMainRecordConfirm()
    {
        if (selectedRecord?.SubmissionID > 0)
        {
            action = "DeleteMessageConfirm";
            soundEffect = SoundFunctions.GetPromptSound();

            msgConfirmTitle = $"Confirm Delete?";
            msgConfirm = (MarkupString)$"Are you sure you want to delete the {selectedRecord.Make} {selectedRecord.Model} ({selectedRecord.RegistrationNumber})?";

            modalConfirm!.OpenOnTop1();
        }
        else
        {
            action = "Error";
            soundEffect = SoundFunctions.GetErrorSound();

            msgErrorTitle = $"No Message Selected";
            msgError = (MarkupString)$"Please select a vehicle first before pressing the Delete button or if try to select one again if one had been selected.";
            msgErrorStackTrace = null;

            modalError!.Open();
        }
    }

    private async Task DeleteMainRecord()
    {
        action = "DeleteMainRecord";
    }

    private void CancelMainRecordConfirm()
    {
        action = "CancelMainRecordConfirm";
        soundEffect = SoundFunctions.GetPromptSound();

        string? numberOfChanges = $"{selectedRecordChanges?.Count} {(selectedRecordChanges?.Count == 1 ? "Change" : "Changes")}";
        string? listOfChanges = selectedRecordChanges?.Select(x => $"<li>{x.Key}: {x.Value}</li>").Aggregate((x, y) => $"{x}{y}"); //Aggregation in case of duplication

        msgConfirmTitle = $"Confirm Cancel?";
        msgConfirm = (MarkupString)$@"
            <p>
                You have made the following changes:<br />
                - Vehicle: {numberOfChanges}:
                <ul>
                {listOfChanges}
                </ul>
            </p>
            <p>
                Are you sure you want to cancel and lose these changes?
            </p>";

        modalConfirm!.OpenOnTop1();
    }

    private void CancelMainRecord()
    {
        CloseMainRecord();
    }

    private void CloseMainRecord()
    {
        modalVehicle!.Close();

        selectedRecordChanges?.Clear();
    }

    private List<MessageModel>? GetMessages(int submissionID)
    {
        List<MessageModel> messages = new List<MessageModel>
        {
            new MessageModel { MessageID = 1, Message = "The best offer I can give you", MessageTypeID = MessageType.ToCustomer, AmountOffered=250, IsAccepted = false, MessageStatusID = MessageStatus.Sent, From = "robin.wilson@robindigital.co.uk", SentDate = DateTime.Now},
            new MessageModel { MessageID = 2, Message = "An even better offer", MessageTypeID = MessageType.ToCustomer, AmountOffered=350, IsAccepted = false, MessageStatusID = MessageStatus.Sent, From = "robin.wilson@robindigital.co.uk", SentDate = DateTime.Now},
            new MessageModel { MessageID = 3, Message = "Final offer", MessageTypeID = MessageType.ToCustomer, AmountOffered=500, IsAccepted = true, MessageStatusID = MessageStatus.Sent, From = "robin.wilson@robindigital.co.uk", SentDate = DateTime.Now}
        };

        return messages;
    }

    private void CreateMessage() 
    {
        modalMessage!.MakeLarge();
        modalMessage!.Open();
    }

    private void HandleJsonException(HttpRequestException ex, string objectName, string objectID)
    {
        if (ex.Message.Contains(HttpStatusCode.Unauthorized.ToString()))
        {
            loadDataErrorMsg = $"You are not authorised to view this page";

            //Redirect to login screen
            NavManager.NavigateTo($"Login/Vehicles");
        }
        else if (ex.Message.Contains("404 (Not Found)"))
        {
            loadDataErrorMsg = $"The {objectName} \"{objectID}\" is not found";
        }
        else if (ex.Message.Contains("400 (Bad Request)"))
        {
            loadDataErrorMsg = $"The {objectName} \"{objectID}\" resulted in an invalid request";
        }
        else
        {
            loadDataErrorMsg = $"Error: {ex.Message}";
        }
    }
}
